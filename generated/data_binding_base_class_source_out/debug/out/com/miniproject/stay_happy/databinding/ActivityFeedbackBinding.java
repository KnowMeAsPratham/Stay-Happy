// Generated by view binder compiler. Do not edit!
package com.miniproject.stay_happy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RatingBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.miniproject.stay_happy.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityFeedbackBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnSend;

  @NonNull
  public final ImageView imageView4;

  @NonNull
  public final RatingBar rbstars;

  @NonNull
  public final TextView textView10;

  @NonNull
  public final TextView tvfeedback;

  private ActivityFeedbackBinding(@NonNull LinearLayout rootView, @NonNull Button btnSend,
      @NonNull ImageView imageView4, @NonNull RatingBar rbstars, @NonNull TextView textView10,
      @NonNull TextView tvfeedback) {
    this.rootView = rootView;
    this.btnSend = btnSend;
    this.imageView4 = imageView4;
    this.rbstars = rbstars;
    this.textView10 = textView10;
    this.tvfeedback = tvfeedback;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityFeedbackBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityFeedbackBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_feedback, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityFeedbackBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_send;
      Button btnSend = ViewBindings.findChildViewById(rootView, id);
      if (btnSend == null) {
        break missingId;
      }

      id = R.id.imageView4;
      ImageView imageView4 = ViewBindings.findChildViewById(rootView, id);
      if (imageView4 == null) {
        break missingId;
      }

      id = R.id.rbstars;
      RatingBar rbstars = ViewBindings.findChildViewById(rootView, id);
      if (rbstars == null) {
        break missingId;
      }

      id = R.id.textView10;
      TextView textView10 = ViewBindings.findChildViewById(rootView, id);
      if (textView10 == null) {
        break missingId;
      }

      id = R.id.tvfeedback;
      TextView tvfeedback = ViewBindings.findChildViewById(rootView, id);
      if (tvfeedback == null) {
        break missingId;
      }

      return new ActivityFeedbackBinding((LinearLayout) rootView, btnSend, imageView4, rbstars,
          textView10, tvfeedback);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
